{"version":3,"sources":["components/NavBar.js","components/Leaderboard.js","components/PlayerInput.js","components/GuessTracker.js","index.js"],"names":["NavBar","className","AppBar","style","alignItems","Toolbar","Typography","variant","Leaderboard","props","sorted","players","sort","a","b","score","map","player","i","id","name","PlayerInput","useState","player1","setPlayer1","player2","setPlayer2","player3","setPlayer3","player4","setPlayer4","player5","setPlayer5","player6","setPlayer6","playerNames","TextField","value","label","onChange","e","target","Button","color","onClick","getPlayerNames","GuessTracker","setPlayers","round","key","currentGuess","isTurn","index","updatedPlayers","currentTricksWon","slice","findIndex","item","length","p","ct","parseInt","cg","isNaN","Math","abs","updateScoresAndDealer","updateRound","Player","this","Game","state","start","numOfRounds","names","filter","x","setState","alert","endGame","winner","getWinner","Swal","fire","title","text","icon","confirmButtonText","then","result","window","location","reload","max_score","winners","element","winner_string","Fragment","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65b78379.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst NavBar = () => {\n\tconst style = {\n\t\talignItems: \"center\",\n\t};\n\n\treturn (\n\t\t<div className=\"nav-bar\">\n\t\t\t<AppBar style={style}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography variant=\"h3\">Wizard Scorekeeper</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst Leaderboard = props => {\n\tconst sorted = props.players.sort((a, b) => b.score - a.score);\n\treturn (\n\t\t<div className=\"leaderboard\">\n\t\t\t<div className=\"leaderboard-title\">Leaderboard</div>\n\t\t\t{sorted.map((player, i) => (\n\t\t\t\t<div id={\"place\" + i} className=\"player-box\">\n\t\t\t\t\t<div className=\"player-name\"> {player.name} </div>\n\t\t\t\t\t<div className=\"player-score\"> {player.score} </div>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Leaderboard;\n","import React, { useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nconst PlayerInput = props => {\n\tconst [player1, setPlayer1] = useState(\"\");\n\tconst [player2, setPlayer2] = useState(\"\");\n\tconst [player3, setPlayer3] = useState(\"\");\n\tconst [player4, setPlayer4] = useState(\"\");\n\tconst [player5, setPlayer5] = useState(\"\");\n\tconst [player6, setPlayer6] = useState(\"\");\n\n\tconst playerNames = [player1, player2, player3, player4, player5, player6];\n\n\treturn (\n\t\t<div className=\"player-input-container\">\n\t\t\t<div className=\"input-message\">\n\t\t\t\t<p>\n\t\t\t\t\tEnter the player names in your seating order. Player 1 will deal\n\t\t\t\t\tfirst.\n\t\t\t\t</p>\n\t\t\t\t<p>Leave extra boxes empty for fewer than 6 players.</p>\n\t\t\t\t<p>Prepare for leading suits, wizardry, and hijinx.</p>\n\t\t\t</div>\n\t\t\t<div className=\"player-input\">\n\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvalue={player1}\n\t\t\t\t\t\tlabel=\"Player 1\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tonChange={e => setPlayer1(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvalue={player2}\n\t\t\t\t\t\tlabel=\"Player 2\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tonChange={e => setPlayer2(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvalue={player3}\n\t\t\t\t\t\tlabel=\"Player 3\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tonChange={e => setPlayer3(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvalue={player4}\n\t\t\t\t\t\tlabel=\"Player 4\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tonChange={e => setPlayer4(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvalue={player5}\n\t\t\t\t\t\tlabel=\"Player 5\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tonChange={e => setPlayer5(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvalue={player6}\n\t\t\t\t\t\tlabel=\"Player 6\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tonChange={e => setPlayer6(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"start-button\">\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => props.getPlayerNames(playerNames)}\n\t\t\t\t>\n\t\t\t\t\tCommence\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PlayerInput;\n","import React, { useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nconst GuessTracker = props => {\n\tconst [players, setPlayers] = useState(props.players);\n\n\tfunction createGuessHandler(index) {\n\t\treturn e => {\n\t\t\tconst value = e.target.value;\n\t\t\tconst updatedPlayers = [...players];\n\t\t\tupdatedPlayers[index].currentGuess = value;\n\t\t\tsetPlayers(updatedPlayers);\n\t\t};\n\t}\n\n\tfunction createTricksWonHandler(index) {\n\t\treturn e => {\n\t\t\tconst value = e.target.value;\n\t\t\tconst updatedPlayers = [...players];\n\t\t\tupdatedPlayers[index].currentTricksWon = value;\n\t\t\tsetPlayers(updatedPlayers);\n\t\t};\n\t}\n\n\tfunction endRound() {\n\t\treturn () => {\n\t\t\tsetPlayers(updateScoresAndDealer(players));\n\t\t\tprops.updateRound(players, props.round + 1);\n\t\t};\n\t}\n\n\tfunction updateScoresAndDealer(players) {\n\t\tlet updatedPlayers = players.slice();\n\t\tconst index = updatedPlayers.findIndex(item => item.isTurn === true);\n\t\tupdatedPlayers[index].isTurn = false;\n\t\tupdatedPlayers[(index + 1) % updatedPlayers.length].isTurn = true;\n\t\tfor (let i = 0; i < updatedPlayers.length; i++) {\n\t\t\tlet p = updatedPlayers[i];\n\t\t\tlet ct = parseInt(p.currentTricksWon);\n\t\t\tlet cg = parseInt(p.currentGuess);\n\t\t\tif (isNaN(ct) || ct === cg) {\n\t\t\t\tp.score += 2 + cg;\n\t\t\t} else {\n\t\t\t\tp.score -= Math.abs(ct - cg);\n\t\t\t}\n\t\t\t// Ignore history for right now.\n\t\t\tp.currentGuess = \"\";\n\t\t\tp.currentTricksWon = \"\";\n\t\t}\n\t\treturn updatedPlayers;\n\t}\n\n\treturn (\n\t\t<div className=\"guess-tracker\">\n\t\t\t<div className=\"round-count\">Round {props.round + 1}!</div>\n\t\t\t<div className=\"input-message\">\n\t\t\t\tLeave the Tricks Won box blank if you guessed correctly.\n\t\t\t</div>\n\t\t\t<div className=\"player-guesses\">\n\t\t\t\t<div id=\"pad-right\" className=\"guess-field input-message\">\n\t\t\t\t\t{\" \"}\n\t\t\t\t\tGuesses\n\t\t\t\t</div>\n\t\t\t\t{players.map((player, i) => (\n\t\t\t\t\t<div key={i} className=\"guess-field\">\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvalue={player.currentGuess}\n\t\t\t\t\t\t\tlabel={player.isTurn ? player.name + \" (D)\" : player.name}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tonChange={createGuessHandler(i)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"player-guesses\">\n\t\t\t\t<div id=\"pad-right\" className=\"guess-field input-message\">\n\t\t\t\t\tTricks Won\n\t\t\t\t</div>\n\t\t\t\t{players.map((player, i) => (\n\t\t\t\t\t<div key={i} className=\"guess-field\">\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvalue={player.currentTricksWon}\n\t\t\t\t\t\t\tlabel={player.name}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tonChange={createTricksWonHandler(i)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"start-button\">\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={endRound()}>\n\t\t\t\t\tEnd Round\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default GuessTracker;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Swal from \"sweetalert2\";\n\nimport NavBar from \"./components/NavBar\";\nimport Leaderboard from \"./components/Leaderboard\";\nimport PlayerInput from \"./components/PlayerInput\";\nimport GuessTracker from \"./components/GuessTracker\";\n\nimport \"./index.css\";\nimport \"fontsource-roboto\";\n\nclass Player {\n\tconstructor(name) {\n\t\tthis.name = name;\n\t\tthis.score = 0;\n\t\tthis.currentGuess = \"\";\n\t\tthis.currentTricksWon = \"\";\n\t\tthis.isTurn = false;\n\t}\n}\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tplayers: [],\n\t\t\tround: 0,\n\t\t\tstart: false,\n\t\t\tnumOfRounds: null,\n\t\t};\n\t}\n\n\tgetPlayerNames(playerNames) {\n\t\tconst names = playerNames.filter(x => x);\n\t\tif (names.length > 1) {\n\t\t\tconst players = names.map(name => new Player(name)); // create player objs\n\t\t\tconst numOfRounds = 2; //60 / players.length;\n\t\t\tplayers[0].isTurn = true; // set first player to be dealer\n\t\t\tthis.setState({\n\t\t\t\tplayers: players,\n\t\t\t\tstart: true,\n\t\t\t\tnumOfRounds: numOfRounds,\n\t\t\t});\n\t\t} else {\n\t\t\talert(\"You need at least two players for wizard!\");\n\t\t}\n\t}\n\n\tupdateRound(players, round) {\n\t\tif (round === this.state.numOfRounds) {\n\t\t\tthis.endGame(players);\n\t\t}\n\t\tthis.setState({\n\t\t\tplayers: players,\n\t\t\tround: round,\n\t\t});\n\t}\n\n\tendGame(players) {\n\t\tconst winner = this.getWinner(players);\n\t\tSwal.fire({\n\t\t\ttitle: \"Congratulations \" + winner + \"!\",\n\t\t\ttext: \"You won!\",\n\t\t\ticon: \"success\",\n\t\t\tconfirmButtonText: \"New Game?\",\n\t\t}).then(result => {\n\t\t\tif (result.value) {\n\t\t\t\twindow.location.reload(true);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetWinner(players) {\n\t\tconst sorted = players.slice().sort((a, b) => a.score - b.score);\n\t\tconst max_score = sorted[sorted.length - 1].score;\n\t\tconst winners = sorted.filter(element => element.score === max_score);\n\t\tlet winner_string = \"\";\n\t\tswitch (winners.length) {\n\t\t\tcase 1:\n\t\t\t\twinner_string = winners[0].name;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\twinner_string = winners[0].name + \" and \" + winners[1].name;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\twinner_string =\n\t\t\t\t\twinners[0].name + \", \" + winners[1].name + \", and \" + winners[2].name;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\twinner_string = \"everyone..?\";\n\t\t}\n\t\treturn winner_string;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<NavBar />\n\t\t\t\t<div className=\"page\">\n\t\t\t\t\t{this.state.start ? (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Leaderboard players={this.state.players} />\n\t\t\t\t\t\t\t<GuessTracker\n\t\t\t\t\t\t\t\tplayers={this.state.players}\n\t\t\t\t\t\t\t\tround={this.state.round}\n\t\t\t\t\t\t\t\tupdateRound={(players, round) =>\n\t\t\t\t\t\t\t\t\tthis.updateRound(players, round)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t></GuessTracker>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t) : null}\n\t\t\t\t\t{!this.state.start ? (\n\t\t\t\t\t\t<PlayerInput\n\t\t\t\t\t\t\t// Is this best practice? Arrow functions automatically bind 'this' to their\n\t\t\t\t\t\t\t// parent context. Here, that is the Game component\n\t\t\t\t\t\t\tgetPlayerNames={playerNames => this.getPlayerNames(playerNames)}\n\t\t\t\t\t\t></PlayerInput>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\n// ========================================\n"],"sourceRoot":""}